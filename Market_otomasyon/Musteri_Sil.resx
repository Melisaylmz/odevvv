<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAARESURBVHhe7Zr5TxNBFMf7/6l/CeCBSqIilsMKtiBqYtQouz1oS9stigqGy4giUCTxSLQeVBPU
        iIkCUuPxy3Pe7EzZwqvtVkp1Oy/5BDLz5s1+vzszu5B1qVChQoUKFSpUqFDhcvU0aHt66rU73fValgEO
        I9td1zfJ2C3k5kd3ve4hBjmUvg4h2wy889jRu88PqZF5WF/+CPB91VGgptRwimvkJlhXglj2PIEa7CTm
        mEbUyjRPCPl8+a9jY/bTxp2PeIcg4hvKG+yENtRorgDtq5CPBph7wzqwFtqE/A0Dfq1kctRCm5BPGxDx
        JjlObCvJACejDFAGbKMBq0svYCo+Af6TcTh3IMAJsN+n4pO8jxpTbbbNgGf35uB8YyBXcDPY9+z+HDm2
        msjrE/LLMwDFdzeY45JnQ5B5EINsxuBkpmNg9IbMiVjOv2aC1Cvk2zcAl7a88zPxCPxcSpJMxyI85/zB
        AKy9+3e2g9Qr5Ns3APc85uOdp4RbkSvhXmKSrEUR7jJyF1kM6zOeGrf5HQCRfUK+fQP8HXGej8ueEm0l
        M23m4sFI1aLAi5bXVAyrQGpcRQw4J5Z/dtEgRVtZZzmYi1uGqlUNpF4h374BMp8STGG3fqWR1yPkKwPs
        bwH2soP5NbsF9PYYz387W/wQfDNj5vo7YmQtCjtPgWJU5BAcD43y/NG+MCnayujVMM+d6B8ja1HYeQoU
        oyIGfHj+lL/hnd2vwfLjBCkc+fgowXMwF8dQtarBXxuAxHoG+RjN7YfVF1vPgtW0AdoJ86yInRkka1QL
        qVfIt2dA+kEKgh7z5UZy6YgfntyOwtpLg/N4ZIC3WXNCnQl4OTtP1txp5DUJ+aUZ8G35Fdy4fCs32HdY
        h9aLYeh0F/5rsLM1CO6LEfCyXNl268owfPv0ipxjp5DXIuQXN2BlKQ1aq3ma+/br0BKMQuPsIDSmBuEg
        +9kcGgBPWxC8B3TOqfYgNPdHeR/PmUlCSyDKx2INvS3G/qBKk3Mh5TwFqMOuEHKMkP9nA7Lszgc8Cd7f
        eTwATeMJLqocmsYN6GI1sFbwVIKvKmrOcp4CFTPg2oUbvK/rmB8OTyVJYXY4xGp0HTXPh+uXbpJzVhqp
        V8gvbMDr+QXe7mPLuumOQQoqB6yFWwVr4xyb5600Uq+QX8CALxnQ2gZ4+wmd7XlCyN/QokV5bXyrzJt3
        B5B6hfzCBlx1MwPcIWieH4JjC9sMq+lrD0HUV/re3S5KM4Dx4/Mi/PyyuKX9f6dkA5yKMqAUA/BlJHza
        cGRbSQbUQpuQv2HASnoyRy20CflogPmJzPuFsVxSyBNhhPMGOqHt/cMxacCakM8MwO/nWOPd/mt5g53I
        3X7z/xj5H0nV9e3Gxt69OjfBuhKcAt55FI8aUau3Qd8l5JuBHw9iRy3gq9Pbhez8wJWAS0OeCc5CX0dt
        W+68ChUqVKhQoUKFipoMl+s3uTXMs7O3YEQAAAAASUVORK5CYII=
</value>
  </data>
</root>